quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus
quarkus.oidc.client-id=frontend
quarkus.oidc.application-type=web-app
quarkus.oidc.roles.source=accesstoken
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated
quarkus.log.category."com.gargoylesoftware.htmlunit.DefaultCssErrorHandler".level=ERROR
quarkus.oidc.token.refresh-expired=true
quarkus.oidc.token.auto-refresh-interval=3M
quarkus.oidc.authentication.session-age-extension=10M
quarkus.oidc.token.lifespan-grace=5


# Import realm from this module into Keycloak
# Set "SSO Session Idle" (refresh token lifespan) to 2 minutes
# Set "Acccess Token Lifespan" to 2 minutes
# Visit localhost:8080/ (login as alice/alice) and wait 90 seconds (watch "Network" tab in developer tools)
# A request for /tokens/test should complete successfully
# This request will repeat every 90th second and should complete successfully each time

# Change "Access Token Lifespan" to 1 minute, refresh token lifespan is still 2 minutes
# Visit localhost:8080/ and wait 90 seconds (again watching "Network" tab in developer tools)
# The request for /tokens/test will result in 302 redirect to Keycloak: Access token is expired, but refresh token should still be valid
# Expected behavior is that token is silently refreshed as refresh token shouldn't be expired

# Other notes:
# In Keycloak the ID token lifespan is the same as the Access Token lifespan